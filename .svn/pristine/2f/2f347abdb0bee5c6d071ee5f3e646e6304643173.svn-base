<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.benwunet.bks.dao.BksQuestionDao">

    <!-- 对应的插入字段的名字 -->
    <sql id="key">
        <trim suffixOverrides=",">
            user_id,user_name,title,description,
            <if test="province!=null and province!=''">
                province,
            </if>
            <if test="city!=null and city!=''">
                city,
            </if>
            <if test="typeId!=null and typeId!=''">
                type_id,
            </if>
            <if test="typeName!=null and typeName!=''">
                type_name,
            </if>
            <if test="manner!=null and manner!=''">
                manner,
            </if>
            <if test="professorId!=null and professorId!=''">
                professor_id,
            </if>
            <if test="money!=null and money!=''">
                money,
            </if>
        </trim>
    </sql>

    <sql id="value">
        <trim suffixOverrides=",">
            #{userId},#{userName},#{title},#{description},
            <if test="province!=null and province!=''">
                #{province},
            </if>
            <if test="city!=null and city!=''">
                #{city},
            </if>
            <if test="typeId!=null and typeId!=''">
                #{typeId},
            </if>
            <if test="typeName!=null and typeName!=''">
                #{typeName},
            </if>
            <if test="manner!=null and manner!=''">
                ${manner},
            </if>
            <if test="professorId!=null and professorId!=''">
                #{professorId},
            </if>
            <if test="money!=null and money!=''">
                #{money},
            </if>
        </trim>
    </sql>


    <insert id="addAnswer" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO bks_question_answer (
             question_id,
             answer_content,
             user_id,
             user_name,
             `type` )
        VALUES(
              #{questionId},
              #{answerContent},
              #{userId},
              #{userName},
              #{type}
        )
    </insert>

    <insert id="addQuestion" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO bks_question (<include refid="key"/>) VALUES(<include refid="value"/>)
    </insert>

    <insert id="addPic">
        INSERT INTO bks_question_pic(question_id,answer_id,url)
        VALUES
        <foreach collection="urls" item="url" index="index" separator=",">
            (#{questionId},#{answerId},#{url})
        </foreach>
    </insert>

    <update id="updateNum">
        UPDATE bks_question SET num = #{num} WHERE id = #{id}
    </update>

    <update id="updateLikeNum">
        UPDATE bks_question_answer SET num = #{num} WHERE id = #{id}
    </update>

    <update id="updateAccept">
        UPDATE bks_question_answer SET accept_type = 1 WHERE id = #{id}
    </update>

    <select id="getServiceTypes" resultType="com.benwunet.bks.model.BksServiceType">
        select * from bks_service_type
        <where>
            `type` in
            <foreach collection="types" open="(" item="type" close=")" separator=",">
                #{type}
            </foreach>
        </where>
    </select>

    <select id="getQuestions" resultType="com.benwunet.bks.model.vo.QuestionVO">
        SELECT
        t0.id,
        t0.title,
        t0.`status`,
        t0.money,
        t0.gmt_create,
        COUNT( t1.id ) AS answerNum
        FROM
        bks_question t0
        LEFT JOIN bks_question_answer t1 ON t0.id = t1.question_id
        <where>
            <if test="questionStatus != null ">
                AND t0.status = #{questionStatus}
            </if>
            <if test="typeId != null and typeId != ''">
                AND t0.type_id = #{typeId}
            </if>
            <if test="param != null and param != ''">
                AND t0.title LIKE '%${param}%'
            </if>
            <if test="userId != null and userId != ''">
                AND t1.user_id = #{userId}
            </if>
            <if test="manners != null ">
                AND t0.manner in
                <foreach collection="manners" item="manner" open="(" separator="," close=")">
                    #{manner}
                </foreach>
            </if>
        </where>
        GROUP BY
        t0.id,
        t0.title,
        t0.`status`,
        t0.gmt_create
        ORDER BY
        t0.gmt_create DESC
        LIMIT #{pageCurrent},#{pageSize}
    </select>

    <select id="getQuestionCount" resultType="java.lang.Long">
        SELECT
        COUNT(1)
        FROM
        bks_question t0
        LEFT JOIN bks_question_answer t1 ON t0.id = t1.question_id
        <where>
            <if test="questionStatus != null and questionStatus != ''">
                AND t0.status = #{questionStatus}
            </if>
            <if test="typeId != null and typeId != ''">
                AND t0.type_id = #{typeId}
            </if>
            <if test="param != null and param != ''">
                AND t0.title LIKE '%${param}%'
            </if>
            <if test="userId != null and userId != ''">
                AND t1.user_id = #{userId}
            </if>
            <if test="manners != null ">
                AND t0.manner in
                <foreach collection="manners" item="manner" open="(" separator="," close=")">
                    #{manner}
                </foreach>
            </if>
        </where>
    </select>

    <select id="getAnswers" resultType="com.benwunet.bks.model.vo.AnswerVO">
        SELECT
            t0.id,
            t0.user_id,
            t0.user_name,
            t1.head_img,
            t0.answer_content,
            t0.type,
            t0.accept_type,
            t0.num AS likeNum,
            t0.gmt_create
        FROM
            bks_question_answer t0
            LEFT JOIN bks_user t1 ON t0.user_id = t1.user_id
        WHERE
            t0.question_id = #{id}
        ORDER BY
            t0.accept_type DESC,
            t0.type DESC,
            t0.gmt_create ASC
    </select>

    <select id="getAnswer" resultType="com.benwunet.bks.model.vo.AnswerVO">
        SELECT
            COUNT( user_id ) AS answerNum,
            ( SELECT COUNT( user_id ) FROM bks_question_answer WHERE accept_type = 1 ) AS acceptedNum
        FROM
            bks_question_answer
        WHERE
            user_id = #{userId}
    </select>


    <select id="getQuestion" resultType="com.benwunet.bks.model.vo.QuestionInfoVO">
        SELECT
            t0.id,
            t0.title,
            t0.user_id,
            t0.user_name,
            t0.province AS provinceName,
            t0.money,
            t0.num,
            t0.type_id,
            t0.`status`,
            t0.gmt_create,
            COUNT( t1.question_id ) AS answersNum ,
	        t0.description,
            t2.class_name,
            t2.head_img
        FROM
            bks_question t0
            LEFT JOIN bks_question_answer t1 ON t0.id = t1.question_id
            LEFT JOIN bks_user t2 ON t0.user_id = t2.user_id
        WHERE
            t0.id = #{id}
    </select>

    <select id="getEssential" resultType="com.benwunet.bks.model.BksQuestionChoiceness">
        SELECT
            *
        FROM
            bks_question_choiceness
        ORDER BY
            view_num DESC,
            answer_num DESC
            LIMIT 0,10
    </select>

    <select id="getHighPrice" resultType="com.benwunet.bks.model.vo.RewardVO">
        SELECT
        t0.id,
        t0.title,
        t0.`status`,
        t0.money,
        t0.gmt_create
        FROM
        bks_question t0
        <where>
            <if test="param != null and param != ''">
                AND t0.title LIKE '%${param}%'
            </if>
        </where>
        ORDER BY
        t0.money DESC
        LIMIT 0,10
    </select>

    <select id="getProfessors" resultType="com.benwunet.bks.model.BksProfessor">
        SELECT
            user_id,
            professor_name,
            head_img,
            skilled_field
        FROM
            bks_professor
        ORDER BY
            accept_num DESC
            LIMIT 0,10
    </select>

    <select id="getAnswerNum" resultType="java.lang.Long">
        SELECT
            count( 1 )
        FROM
            bks_question_answer
        WHERE
            accept_type =1
    </select>

    <select id="getAnswerById" resultType="java.lang.Long">
        select num from bks_question_answer where id = #{id}
    </select>

    <select id="getBanners" resultType="com.benwunet.bks.model.vo.BannerVO">
        SELECT
            banner_url,
            detail_url
        FROM
            bks_question_banner
        WHERE
            `type` = #{typeId}
    </select>

    <select id="getProfessorList" resultType="com.benwunet.bks.model.vo.ProfessorVO">
        SELECT
            id,
            user_id,
            professor_name,
            head_img,
            skilled_field,
            `status`
        FROM
            bks_professor
        WHERE
            `status` = 1
        ORDER BY
            accept_num DESC
            LIMIT 0,5
    </select>

    <select id="getPopulars" resultType="com.benwunet.bks.model.vo.PopularVO">
        SELECT
        t0.id,
        t0.title,
        t0.gmt_create,
        COUNT( t1.question_id ) AS answerNum
        FROM
        bks_question t0
        LEFT JOIN bks_question_answer t1 ON t0.id = t1.question_id
        <where>
            <if test="param != null and param != ''">
                AND t0.title LIKE '%${param}%'
            </if>
        </where>
        GROUP BY
        t0.id,
        t0.title
        ORDER BY
        answerNum DESC,
        t0.num DESC
        LIMIT 0,10
    </select>

    <select id="getRewards" resultType="com.benwunet.bks.model.vo.RewardVO">
        SELECT
        t0.id,
        t0.title,
        t0.`status`,
        t0.money,
        t0.gmt_create,
        COUNT( t1.question_id ) AS answerNum
        FROM
        bks_question t0
        LEFT JOIN bks_question_answer t1 ON t0.id = t1.question_id
        <where>
            <if test="manners != null ">
                AND t0.manner in
                <foreach collection="manners" item="manner" open="(" separator="," close=")">
                    #{manner}
                </foreach>
            </if>
        </where>
        GROUP BY
        t0.id,
        t0.title
        ORDER BY
        <if test="sort == 'TIME'">
            t0.gmt_create ASC,
        </if>
        t0.money DESC
        LIMIT #{pageCurrent},#{pageSize}
    </select>


    <select id="getQuestionPics" resultType="java.lang.String">
        select url from bks_question_pic where question_id = #{id}
    </select>
    <select id="getAnswerPics" resultType="java.lang.String">
        select url from bks_question_pic where answer_id = #{id}
    </select>

    <select id="getQuestionUserId" resultType="java.lang.String">
        SELECT
            t1.user_id
        FROM
            bks_question_answer t0
            LEFT JOIN bks_question t1 ON t0.question_id = t1.id
        WHERE
            t0.id = #{id}
    </select>

    <select id="checkAnswer" resultType="java.lang.Integer">
        SELECT
            count( 1 )
        FROM
            bks_question_answer
        WHERE
            question_id = #{questionId} AND user_id = #{userId}
    </select>

    <select id="getPraise" resultType="java.lang.Integer">
        SELECT
            count( 1 )
        FROM
            bks_question_answer_praise
        WHERE
            answer_id = #{answerId} AND user_id = #{userId}
    </select>

    <select id="getQuestionProfessors" resultType="com.benwunet.bks.model.vo.ProfessorVO">
        SELECT
            t0.user_id,
            t0.professor_name,
            t0.head_img,
            t0.skilled_field,
            t0.`status`,
            t1.type_cost
        FROM
            bks_professor t0
            LEFT JOIN bks_professor_standard t1 ON t1.professor_id = t0.id
        WHERE
            t1.type = 4
        ORDER BY  t0.gmt_create ASC
         LIMIT #{pageCurrent},#{pageSize}
    </select>

</mapper>