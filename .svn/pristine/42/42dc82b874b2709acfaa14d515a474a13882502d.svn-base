package com.benwunet.bks.controller.member;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.benwunet.bks.controller.base.BaseController;
import com.benwunet.bks.model.BksMember;
import com.benwunet.bks.model.BksUser;
import com.benwunet.bks.service.BksMemberService;
import com.benwunet.bks.service.BksUserService;
import com.benwunet.mws.commons.utils.PubSysUserUtil;
import com.benwunet.mws.model.base.LoginPubSysUser;
import com.benwunet.mws.model.result.ResponseResult;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.ObjectUtils;
import org.springframework.web.bind.annotation.*;

/**
 * 会员控制器
 *
 * @author zhoux
 * @date 2019/11/15
 */
@RestController
@Api(value = "会员控制器", tags = "会员控制器")
@RequestMapping("/member")
public class BksMemberController extends BaseController {

    @Autowired
    private BksMemberService bksMemberService;
    @Autowired
    private BksUserService bksUserService;


    /**
     * 开通会员
     */
    @PostMapping("/openMember")
    @ApiOperation(value = "开通会员", notes = "开通会员")
    public ResponseResult openMember(@ApiParam(value = "用户id") @RequestParam String userId) {
        //开通会员
        bksMemberService.openMember(userId);
        return success();
    }

    /**
     * 查询会员信息
     */
    @PostMapping("/queryMemberInfo")
    @ApiOperation(value = "查询会员信息", notes = "查询会员信息")
    public ResponseResult queryMemberInfo(@ApiParam(value = "用户id") @RequestParam String userId) {
        QueryWrapper<BksUser> bksUserQueryWrapper = new QueryWrapper<>();
        if (ObjectUtils.isEmpty(userId)) {
            bksUserQueryWrapper.eq("user_id", PubSysUserUtil.getLoginPubSysUser().getUserId());
        } else {
            bksUserQueryWrapper.eq("user_id", userId);
        }
        BksUser bksUser = bksUserService.getOne(bksUserQueryWrapper);
        if (ObjectUtils.isEmpty(bksUser)) {
            return fail("用户不存在！");
        }
        BksMember bksMember = bksMemberService.getById(bksUser.getMemberId());
        if (ObjectUtils.isEmpty(bksMember)) {
            return fail("该用户不是会员！");
        }
        return success(bksMember);
    }

}
