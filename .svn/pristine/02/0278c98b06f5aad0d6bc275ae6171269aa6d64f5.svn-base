package com.benwunet.bks.controller.simulation;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.benwunet.bks.controller.base.BaseController;
import com.benwunet.bks.feign.UserClient;
import com.benwunet.bks.model.BksSimulationBatch;
import com.benwunet.bks.model.BksSimulationMajor;
import com.benwunet.bks.model.BksSimulationSchool;
import com.benwunet.bks.model.BksSimulationVoluntary;
import com.benwunet.bks.model.queryVO.BksSimulationVoluntaryQueryVO;
import com.benwunet.bks.model.vo.BksSimulationBatchVO;
import com.benwunet.bks.model.vo.BksSimulationMajorVO;
import com.benwunet.bks.model.vo.BksSimulationSchoolVO;
import com.benwunet.bks.model.vo.BksSimulationVoluntaryVO;
import com.benwunet.bks.service.BksSimulationBatchService;
import com.benwunet.bks.service.BksSimulationMajorService;
import com.benwunet.bks.service.BksSimulationSchoolService;
import com.benwunet.bks.service.BksSimulationVoluntaryService;
import com.benwunet.mws.commons.utils.PubSysUserUtil;
import com.benwunet.mws.model.result.ResponseResult;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.ObjectUtils;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.ArrayList;
import java.util.List;

/**
 * <p>
 * 模拟填报志愿表 前端控制器
 * </p>
 *
 * @author zhoux
 * @since 2019-11-25
 */
@RestController
@Api(value = "模拟填报志愿表 前端控制器", tags = "模拟填报志愿表 前端控制器")
@RequestMapping("/bksSimulationVoluntary")
public class BksSimulationVoluntaryController extends BaseController {

    @Autowired
    private BksSimulationVoluntaryService bksSimulationVoluntaryService;

    @Autowired
    private BksSimulationBatchService bksSimulationBatchService;

    @Autowired
    private BksSimulationSchoolService bksSimulationSchoolService;

    @Autowired
    private BksSimulationMajorService bksSimulationMajorService;

    @PostMapping("/queryBksSimulationVoluntary")
    @ApiOperation(value = "查询模拟填报志愿表", notes = "{查询模拟填报志愿表}")
    public ResponseResult queryBksSimulationVoluntary(@RequestBody BksSimulationVoluntaryQueryVO bksSimulationVoluntaryQueryVO) {
        //查询模拟填报志愿表
        QueryWrapper<BksSimulationVoluntary> bksSimulationVoluntaryQueryWrapper = new QueryWrapper<>();
        bksSimulationVoluntaryQueryWrapper.eq("user_id", bksSimulationVoluntaryQueryVO.getUserId());
        List<BksSimulationVoluntary> bksSimulationVoluntaryList = bksSimulationVoluntaryService.list(bksSimulationVoluntaryQueryWrapper);
        List<BksSimulationVoluntaryVO> BksSimulationVoluntaryVOList = new ArrayList<>();
        bksSimulationVoluntaryList.forEach(x -> {
            BksSimulationVoluntaryVO bksSimulationVoluntaryVO = new BksSimulationVoluntaryVO();
            BeanUtils.copyProperties(x, bksSimulationVoluntaryVO);
            //查询模拟填报批次表
            QueryWrapper<BksSimulationBatch> bksSimulationBatchQueryWrapper = new QueryWrapper<>();
            bksSimulationBatchQueryWrapper.eq("bks_simulation_voluntary_id", x.getId());
            List<BksSimulationBatch> bksSimulationBatchList = bksSimulationBatchService.list(bksSimulationBatchQueryWrapper);
            List<BksSimulationBatchVO> bksSimulationBatchVOList = new ArrayList<>();
            bksSimulationBatchList.forEach(y -> {
                BksSimulationBatchVO bksSimulationBatchVO = new BksSimulationBatchVO();
                BeanUtils.copyProperties(y, bksSimulationBatchVO);
                //查询模拟填报学校表
                QueryWrapper<BksSimulationSchool> bksSimulationSchoolQueryWrapper = new QueryWrapper<>();
                bksSimulationSchoolQueryWrapper.eq("bks_simulation_batch_id", y.getId());
                List<BksSimulationSchool> bksSimulationSchoolList = bksSimulationSchoolService.list(bksSimulationSchoolQueryWrapper);
                List<BksSimulationSchoolVO> bksSimulationSchoolVOList = new ArrayList<>();
                bksSimulationSchoolList.forEach(z -> {
                    BksSimulationSchoolVO bksSimulationSchoolVO = new BksSimulationSchoolVO();
                    BeanUtils.copyProperties(z, bksSimulationSchoolVO);
                    //查询模拟填报专业表
                    QueryWrapper<BksSimulationMajor> bksSimulationMajorQueryWrapper = new QueryWrapper<>();
                    bksSimulationMajorQueryWrapper.eq("bks_simulation_school_id", z.getSchoolId());
                    List<BksSimulationMajor> bksSimulationMajorList = bksSimulationMajorService.list(bksSimulationMajorQueryWrapper);
                    List<BksSimulationMajorVO> bksSimulationMajorVOList = new ArrayList<>();
                    bksSimulationMajorList.forEach(x1 -> {
                        BksSimulationMajorVO bksSimulationMajorVO = new BksSimulationMajorVO();
                        BeanUtils.copyProperties(x1, bksSimulationMajorVO);
                        bksSimulationMajorVOList.add(bksSimulationMajorVO);
                    });
                    bksSimulationSchoolVO.setBksSimulationMajorVOList(bksSimulationMajorVOList);
                    bksSimulationSchoolVOList.add(bksSimulationSchoolVO);
                });
                bksSimulationBatchVO.setBksSimulationSchoolVOList(bksSimulationSchoolVOList);
                bksSimulationBatchVOList.add(bksSimulationBatchVO);
            });
            bksSimulationVoluntaryVO.setBksSimulationBatchVOList(bksSimulationBatchVOList);
            BksSimulationVoluntaryVOList.add(bksSimulationVoluntaryVO);
        });
        return success(bksSimulationVoluntaryService.count(bksSimulationVoluntaryQueryWrapper), BksSimulationVoluntaryVOList);
    }

    @PostMapping("/saveBksSimulationVoluntary")
    @ApiOperation(value = "保存模拟填报志愿表", notes = "{保存模拟填报志愿表}")
    public ResponseResult saveBksSimulationVoluntary(@RequestBody List<BksSimulationVoluntaryVO> BksSimulationVoluntaryVOList) {
        if (ObjectUtils.isEmpty(BksSimulationVoluntaryVOList)) {
            throw new RuntimeException("模拟填报志愿表VOList为空");
        }
        BksSimulationVoluntaryVOList.forEach(x -> {
            bksSimulationVoluntaryService.saveOrUpdate(x.setUserId(PubSysUserUtil.getLoginPubSysUser().getUserId()));
            List<BksSimulationBatchVO> bksSimulationBatchVOList = x.getBksSimulationBatchVOList();
            if (ObjectUtils.isEmpty(BksSimulationVoluntaryVOList)) {
                throw new RuntimeException("模拟填报批次表VOList为空");
            }
            bksSimulationBatchVOList.forEach(y -> {
                bksSimulationBatchService.saveOrUpdate(y.setBksSimulationVoluntaryId(x.getId()));
                List<BksSimulationSchoolVO> bksSimulationSchoolVOList = y.getBksSimulationSchoolVOList();
                if (ObjectUtils.isEmpty(BksSimulationVoluntaryVOList)) {
                    throw new RuntimeException("模拟填报学校表VOList为空");
                }
                bksSimulationSchoolVOList.forEach(z -> {
                    bksSimulationSchoolService.saveOrUpdate(z.setBksSimulationBatchId(y.getId()));
                    List<BksSimulationMajorVO> bksSimulationMajorVOList = z.getBksSimulationMajorVOList();
                    if (ObjectUtils.isEmpty(BksSimulationVoluntaryVOList)) {
                        throw new RuntimeException("模拟填报专业表VOList为空");
                    }
                    bksSimulationMajorVOList.forEach(x1 -> {
                        bksSimulationMajorService.saveOrUpdate(x1.setBksSimulationSchoolId(z.getSchoolId()));
                    });
                });
            });
        });
        return success();
    }

}

